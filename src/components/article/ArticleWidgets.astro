---
import type { MarkdownHeading } from 'astro'

import Toc from '@/components/widgets/toc'

interface Props {
  headings: MarkdownHeading[]
  title: string
}

const { headings, title } = Astro.props

const totalHeadings = headings.length
---

{/* Desktop */}
<aside
  id="art-wid-dk-cont"
  class={`
    fixed left-0 right-0 top-32 hidden lg:block pointer-events-none
    data-[hidden=true]:opacity-0 transition-opacity duration-300
  `}
>
  <div class="max-w-screen-2xl mx-auto flex justify-between">
    {totalHeadings ? <Toc {headings} {title} /> : <div />}
  </div>
</aside>

<script>
  import { $ } from '@/lib/dom'

  const artWidDkContElem = $('#art-wid-dk-cont')!
  const endOfArticleElem = $('#end-of-article')!

  const endOfArticleObserver = new IntersectionObserver(
    (entries) => {
      entries.forEach(({ isIntersecting }) => {
        artWidDkContElem.setAttribute('data-hidden', isIntersecting + '')
      })
    },
    {
      root: null,
      rootMargin: '0px',
      threshold: 1
    }
  )

  endOfArticleObserver.observe(endOfArticleElem)

  /* show & hide by scroll */
  /* const artWidMbCntElem = $('#art-wid-mb-cont')!

  let lastScrollPos = window.scrollX
  document.addEventListener('scrollend', () => {
    const currentScrollPos = window.scrollY

    const scrollPosDelta = lastScrollPos - currentScrollPos
    const isScrollingUp = scrollPosDelta >= 0

    lastScrollPos = currentScrollPos

    if (Math.abs(scrollPosDelta) < 60) return
    artWidMbCntElem.setAttribute('data-show', isScrollingUp + '')
  }) */
</script>
