---
import { getCollection } from 'astro:content'
import ArticleItem from './ArticleItem.astro'
import { groupBy } from '@/lib/utils'

const articlesCollection = await getCollection('articles')

const articlesGroupedByYear = groupBy(
  articlesCollection,
  (article) => article.data.pubDate.getFullYear() + ''
)

const avaibleYears = Object.keys(articlesGroupedByYear).sort((a, b) => +b - +a)

const isProd = import.meta.env.PROD
---

{
  avaibleYears.map((year) => {
    const articles =
      articlesGroupedByYear[year as keyof typeof articlesGroupedByYear]

    if (!articles) return null

    const articlesSorted = articles.sort(
      (a, b) => b.data.pubDate - a.data.pubDate
    )

    return (
      <section class="mt-8 first-of-type:mt-16">
        <h2 class="mb-2 text-sm">{year}</h2>
        <ul>
          {articlesSorted.map((article) => {
            if (isProd && article.data.isDraft) return null
            return <ArticleItem {article} />
          })}
        </ul>
      </section>
    )
  })
}
