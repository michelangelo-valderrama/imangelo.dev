---
import type { GetStaticPaths } from 'astro'
import type { CollectionEntry } from 'astro:content'
import { Image } from 'astro:assets'

import { getFilteredPosts, formatDate } from '@/lib/utils'

import Root from '@/layouts/Root.layout.astro'
import Main from '@/layouts/Main.layout.astro'
import Markdown from '@/layouts/Markdown.layout.astro'

import RelatedArticles from '@/components/view/RelatedArticles.astro'
import ArticleActions from '@/components/view/ArticleActions.astro'
import PageHeader from '@/components/view/PageHeader.astro'
import ArticleWidgets from '@/components/widgets/ArticleWidgets.astro'
import ArticleSeo from '@/components/seo/ArticleSeo.astro'

export const getStaticPaths = (async () => {
  const articles = await getFilteredPosts('articles')

  return articles.map((article) => {
    return {
      params: { article: article.slug },
      props: { article }
    }
  })
}) satisfies GetStaticPaths

interface Props {
  article: CollectionEntry<'articles'>
}

const { article } = Astro.props
const { Content, headings } = await article.render()

const {
  data: { category, cover, lastModDate, pubDate, tags, title },
  slug
} = article

const pubDateFormatted = formatDate(pubDate)
---

<Root>
  <ArticleSeo slot="head" article={article} imageSrc={cover?.src} />
  <Main currentPage="ArtÃ­culo" class="pb-24">
    <ArticleWidgets {headings} {title} />
    <PageHeader title={title} subtitle={pubDateFormatted} subtitleDate={true}>
      {!cover ? null : <Image {...cover} alt={title} class="mt-6 mb-18" />}
    </PageHeader>
    <Markdown class="mb-16" id="article-content">
      <Content />
    </Markdown>
    <div id="end-of-article">
      <ArticleActions
        url={Astro.url.toString()}
        slug={slug}
        coverCredits={cover?.credits}
        {pubDate}
        {lastModDate}
        {category}
        {tags}
      />
      <RelatedArticles {pubDate} {category} slug={article.slug} />
    </div>
  </Main>
</Root>
