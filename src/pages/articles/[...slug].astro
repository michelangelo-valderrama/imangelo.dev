---
import type { GetStaticPaths } from 'astro'
import type { CollectionEntry } from 'astro:content'
import { Image } from 'astro:assets'

import { getFilteredPosts } from '@/lib/utils'

import Root from '@/layouts/Root.layout.astro'
import Main from '@/layouts/Main.layout.astro'
import Markdown from '@/layouts/Markdown.layout.astro'

import RelatedArticles from '@/components/article/RelatedArticles.astro'
import ArticleWidgets from '@/components/article/ArticleWidgets.astro'
import ArticleActions from '@/components/article/article-actions'

import PageHeader from '@/components/view/PageHeader.astro'

import Skeleton from '@/components/ui/skeleton'

export const getStaticPaths = (async () => {
  const articles = await getFilteredPosts('articles')

  return articles.map((article) => ({
    params: { slug: article.slug },
    props: { article }
  }))
}) satisfies GetStaticPaths

interface Props {
  article: CollectionEntry<'articles'>
}

const { article } = Astro.props
const { Content, headings } = await article.render()

const {
  data: { category, cover, lastModDate, pubDate, tags, title }
} = article
---

<Root>
  <Main class="pb-24">
    <ArticleWidgets {headings} {title} />
    <PageHeader title={title} subtitle="21 sep, 2024" subtitleDate={true}>
      {!cover ? null : <Image {...cover} alt={title} class="my-4" />}
    </PageHeader>
    <Markdown class="mb-16" id="article-content">
      <Content />
    </Markdown>
    <div id="end-of-article">
      <ArticleActions url={Astro.url.toString()} client:only>
        <Skeleton className="h-9 mb-8" slot="fallback" />
      </ArticleActions>
      <RelatedArticles {category} slug={article.slug} />
    </div>
  </Main>
</Root>
