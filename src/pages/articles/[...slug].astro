---
import type { GetStaticPaths } from 'astro'
import type { CollectionEntry } from 'astro:content'
import { Image } from 'astro:assets'

import { getFilteredPosts } from '@/lib/utils'

import Root from '@/layouts/Root.layout.astro'
import Main from '@/layouts/Main.layout.astro'
import Markdown from '@/layouts/Markdown.layout.astro'

import BackLink from '@/components/widgets/BackLink.astro'

import ArticleFooter from '@/components/article/ArticleFooter.astro'
import RelatedArticles from '@/components/article/RelatedArticles.astro'
import ArticleWidgets from '@/components/article/ArticleWidgets.astro'
import ArticleGoodbye from '@/components/article/ArticleGoodbye.astro'

export const getStaticPaths = (async () => {
  const articles = await getFilteredPosts('articles')

  return articles.map((article) => ({
    params: { slug: article.slug },
    props: { article }
  }))
}) satisfies GetStaticPaths

interface Props {
  article: CollectionEntry<'articles'>
}

const { article } = Astro.props
const { Content, headings } = await article.render()

const {
  data: { category, cover, lastModDate, pubDate, tags, title }
} = article
---

<Root>
  <Main>
    <ArticleWidgets {headings} {title} />
    <header class="mb-8">
      <BackLink />
      <h1
        id="title"
        class="text-xl font-medium line-height-tight mb-1 mt-2 text-header"
      >
        {title}
      </h1>
      <time class="text-sm text-muted-foreground" datetime="2024-09-01"
        >21 sep, 2024</time
      >
      {!cover ? null : <Image {...cover} alt={title} class="mt-6" />}
    </header>
    <Markdown class="mb-18" id="article-content">
      <Content />
      <ArticleGoodbye />
    </Markdown>
    <div id="end-of-article">
      <RelatedArticles {category} slug={article.slug} />
      <ArticleFooter
        lastUpdateDate={lastModDate ?? pubDate}
        imageCredits={cover?.credits}
        {category}
        {tags}
      />
    </div>
  </Main>
</Root>
